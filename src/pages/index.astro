---
import { Img } from 'astro-imagetools/components';
import probe from 'probe-image-size';
import Layout from '../layouts/Layout.astro';
import Footer from '../components/Footer.astro';

let QUERY = encodeURIComponent(`*[_type == "art"] | order(_createdAt desc) {name, "imageUrl": image.asset->url, image}`);
const date = new Date().toISOString().substring(0, 10);
let url = `https://${import.meta.env.SANITY_PROJECT_ID}.api.sanity.io/v${date}/data/query/${import.meta.env.SANITY_DATASET}?query=${QUERY}`;
const response = await fetch(url);
const data = await response.json();

interface accessibleImage {
  _type: 'accessibleImage',
  alt: string,
  asset: {
    _ref: string,
    _type: 'reference'
  }
  imageUrl: string,
  name: string
}

const images = await Promise.all(
  data.result.map(async (img:accessibleImage) => {
    const size = await probe(img.imageUrl);

    console.log(img)

    return { name: img.name,
  imageUrl: img.imageUrl, size };
  }),
);

QUERY = encodeURIComponent(`*[_type == "settings"]`);
url = `https://${import.meta.env.SANITY_PROJECT_ID}.api.sanity.io/v${date}/data/query/${import.meta.env.SANITY_DATASET}?query=${QUERY}`;
const settingsResponse = await fetch(url);
const settingsData = await settingsResponse.json();
const title = settingsData.result[0].title
const subtitle = settingsData.result[0].subtitle

---

<Layout title={title}>
  <div class="py-4 sm:py-6 lg:py-8 flex flex-col justify-between h-screen">
    <main class="mb-auto">
      <div class="my-8 sm:my-12">
        <h2
          class="text-gray-800 dark:text-white text-2xl md:text-3xl lg:text-4xl text-center mb-4 md:mb-6 font-semibold"
        >
          {title}
        </h2>
        <p
          class="max-w-screen-md dark:text-slate-400 text-gray-500 md:text-lg text-center mx-auto"
        >
          {subtitle}
        </p>
      </div>

      <div class="max-w-screen-xl px-4 md:px-8 mx-auto">
        <div
          id="my-gallery"
          class="pswp-gallery grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 gap-4 md:gap-6 xl:gap-8 gallery"
        >
          {
            images.map((image) => (
              <a
                href={image.imageUrl}
                data-cropped="true"
                data-pswp-width={image.size.width}
                data-pswp-height={image.size.height}
                class="group h-72 md:h-96 flex justify-end items-end bg-gray-100 overflow-hidden rounded-xl shadow-lg relative gallery-item hover:shadow-xl"
              >
                <div class="w-full h-full flex object-cover object-center absolute inset-0 group-hover:scale-110 transition duration-200 text-transparent">
                  <Img
                    src={image.imageUrl}
                    alt={image.name}
                    format="webp"
                    width={650}
                  />
                </div>

                <div class="bg-gradient-to-t from-black via-transparent to-transparent opacity-20 absolute inset-0 pointer-events-none group-hover:opacity-0 transition duration-200" />

                <span class="inline-block text-gray-200 text-xs md:text-sm border border-gray-500 rounded-lg backdrop-blur relative px-2 md:px-3 py-1 mr-3 mb-3 group-hover:opacity-0 transition duration-200">
                  {image.name}
                </span>
              </a>
            ))
          }
        </div>
      </div>
    </main>

    <Footer />
  </div>
</Layout>
